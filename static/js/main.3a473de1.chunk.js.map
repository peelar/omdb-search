{"version":3,"sources":["hooks/useDebounce.ts","api/axios.ts","api/fetcher.ts","hooks/useSearch.ts","components/Results/Results.tsx","components/Pagination/Pagination.tsx","components/Search/Search.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["useDebounce","value","delay","useState","debouncedValue","setDebouncedValue","useEffect","handler","setTimeout","clearTimeout","instance","axios","create","baseURL","params","apikey","process","fetcher","phrase","page","get","s","then","res","data","useSearch","numPage","toString","useSWR","error","results","isLoading","isError","Results","map","result","index","Title","Pagination","total","setPage","count","Math","round","onChange","_","Search","setValue","isResponseEmpty","Response","Box","component","my","onSubmit","e","preventDefault","Grid","container","spacing","item","xs","TextField","type","target","placeholder","fullWidth","Button","variant","color","onClick","display","alignItems","justifyContent","minHeight","CircularProgress","parseInt","totalResults","App","AppBar","position","Toolbar","Container","maxWidth","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","theme","createMuiTheme","ReactDOM","render","StrictMode","ThemeProvider","document","getElementById"],"mappings":"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","file":"static/js/main.3a473de1.chunk.js","sourcesContent":["// credits go to: https://github.com/vercel/swr/issues/110#issuecomment-552637429\nimport { useState, useEffect } from \"react\";\n\nconst useDebounce = (value: string, delay: number): string => {\n  const [debouncedValue, setDebouncedValue] = useState(value);\n\n  useEffect(() => {\n    if (value === \"\") setDebouncedValue(value);\n    const handler = setTimeout(() => {\n      setDebouncedValue(value);\n    }, delay);\n\n    return () => {\n      clearTimeout(handler);\n    };\n  }, [value, delay]);\n\n  return debouncedValue;\n};\n\nexport default useDebounce;\n","import axios from \"axios\";\n\nconst instance = axios.create({\n  baseURL: \"https://www.omdbapi.com\",\n  params: {\n    apikey: process.env.REACT_APP_AUTH_KEY,\n  },\n});\n\nexport default instance;\n","import axios from \"../api/axios\";\n\nconst fetcher = (phrase: string, page: string) =>\n  axios.get(\"\", { params: { s: phrase, page } }).then((res) => res.data);\n\nexport default fetcher;\n","import { OMDBSearchResponse } from \"./../../types\";\nimport useSWR from \"swr\";\nimport fetcher from \"../api/fetcher\";\nimport { AxiosError } from \"axios\";\n\ntype UseSearchValues = {\n  results: OMDBSearchResponse | undefined;\n  isLoading: boolean;\n  isError: AxiosError<any> | undefined;\n};\n\nconst useSearch = (phrase: string, page: number): UseSearchValues => {\n  const numPage = page.toString();\n  const { data, error } = useSWR<OMDBSearchResponse, AxiosError>(\n    () => `search/phrase=${phrase}/page=${page}`,\n    () => fetcher(phrase, numPage)\n  );\n  return {\n    results: data,\n    isLoading: !error && !data,\n    isError: error,\n  };\n};\n\nexport default useSearch;\n","import { SearchEntry } from \"../../../types\";\n\nconst Results: React.FC<{ results: SearchEntry[] }> = ({ results }) => {\n  // to-do: pimp up Results\n  return (\n    <ul>\n      {results.map((result, index) => (\n        <li key={`result-${index}`}>{result.Title}</li>\n      ))}\n    </ul>\n  );\n};\n\nexport default Results;\n","import { Pagination as MUIPagination } from \"@material-ui/lab\";\n\nconst RESULTS_PER_PAGE = 10;\n\ntype PaginationProps = {\n  total: number;\n  page: number;\n  setPage: React.Dispatch<React.SetStateAction<number>>;\n};\n\nconst Pagination: React.FC<PaginationProps> = ({ total, page, setPage }) => {\n  // the \"+\" sign is a trick so TypeScript leaves me alone\n  const count = Math.round(+total / RESULTS_PER_PAGE);\n  return (\n    <nav>\n      <MUIPagination\n        page={page}\n        count={count}\n        onChange={(_, value) => setPage(value)}\n      />\n    </nav>\n  );\n};\n\nexport default Pagination;\n","import { useState } from \"react\";\nimport useDebounce from \"../../hooks/useDebounce\";\nimport useSearch from \"../../hooks/useSearch\";\nimport Results from \"../Results/Results\";\nimport Pagination from \"../Pagination/Pagination\";\nimport {\n  Button,\n  Grid,\n  TextField,\n  Box,\n  CircularProgress,\n} from \"@material-ui/core\";\n\nconst Search: React.FC = () => {\n  const [value, setValue] = useState(\"\");\n  const debouncedValue = useDebounce(value, 1000);\n  const [page, setPage] = useState(1);\n  const { results, isError, isLoading } = useSearch(debouncedValue, page);\n\n  const isResponseEmpty =\n    debouncedValue !== \"\" && results?.Response === \"False\";\n\n  const clear = () => {\n    setValue(\"\");\n  };\n\n  return (\n    <Box component=\"section\" my={2}>\n      <form onSubmit={(e) => e.preventDefault()}>\n        <Grid container spacing={2}>\n          <Grid item xs={10}>\n            <TextField\n              type=\"text\"\n              onChange={(e) => setValue(e.target.value)}\n              value={value}\n              placeholder=\"Enter text\"\n              fullWidth\n            />\n          </Grid>\n          <Grid item xs={2}>\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              type=\"button\"\n              onClick={clear}\n            >\n              Clear [X]\n            </Button>\n          </Grid>\n        </Grid>\n      </form>\n      <Box\n        display=\"flex\"\n        alignItems=\"center\"\n        justifyContent=\"center\"\n        minHeight=\"20vh\"\n      >\n        {isLoading && <CircularProgress />}\n        {isError && <h2>Woops!</h2>}\n        {isResponseEmpty && <h2>No data :(</h2>}\n        {results?.Search && (\n          <Box>\n            <Results results={results.Search} />\n            <Pagination\n              page={page}\n              setPage={setPage}\n              total={parseInt(results.totalResults)}\n            />\n          </Box>\n        )}\n      </Box>\n    </Box>\n  );\n};\n\nexport default Search;\n","import { AppBar, Container, Toolbar } from \"@material-ui/core\";\nimport Search from \"./components/Search/Search\";\n\nconst App = () => {\n  return (\n    <>\n      <AppBar position=\"static\">\n        <Toolbar>OMDB Search</Toolbar>\n      </AppBar>\n      <Container maxWidth=\"xl\" component=\"main\">\n        <Search />\n      </Container>\n    </>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from \"web-vitals\";\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createMuiTheme, ThemeProvider } from \"@material-ui/core\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nconst theme = createMuiTheme({});\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}